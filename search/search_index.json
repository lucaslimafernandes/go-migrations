{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"go-migrations","text":"<p>A database migration tool.</p> <p>Go-migrations is a CLI tool and Go library designed to simplify and manage database migrations for projects that use PostgreSQL or MySQL. It provides an easy-to-use interface for applying, reverting, and managing database schema changes across different environments, ensuring consistency and version control of database states.</p> <p>This project is intended to be flexible, offering the following key features:</p> <ul> <li> <p>Multi-Database Support: Supports both PostgreSQL and MySQL databases, allowing seamless transitions between different database systems as needed.</p> </li> <li> <p>CLI for Migration Management: Provides a command-line interface to apply migrations (up) or revert migrations (down), with version control to ensure that migrations are applied in a consistent and correct order.</p> </li> <li> <p>Configurable via configs.yaml: The project uses a configuration file to specify database connection details and the location of migration files, ensuring flexibility across different environments (e.g., development, staging, production).</p> </li> <li> <p>Versioned Migrations: Each migration file follows a naming convention that includes version numbers, ensuring that changes to the database schema are tracked and can be rolled back or reapplied as necessary.</p> </li> </ul> <p>The primary goal of go-migrations is to provide developers with an efficient and reliable way to manage database migrations, preventing issues related to inconsistent database states and ensuring that changes can be easily rolled back if necessary. Whether working in a microservice architecture, monolithic application, or across multiple database environments, go-migrations provides the tools needed to keep database schemas under control.</p>"},{"location":"#usage","title":"Usage","text":"<p>How to use CLI Go-migrations</p>"},{"location":"#configuration-file","title":"Configuration file","text":"<p>How to use CLI Go-migrations</p>"},{"location":"configuration_file/","title":"Configuration","text":"<p>The <code>configs.yaml</code> file is used to configure the database connection settings and migration paths for the go-migrations tool. It defines settings for both PostgreSQL and MySQL databases, allowing the user to configure which database to apply migrations to. Below is a detailed explanation of each section in the configs.yaml file:</p> <ol> <li> <p>Migrations</p> </li> <li> <p>PATH: Specifies the directory where the migration files are stored. The migration files define the database schema changes and are applied in sequence. Ensure that this path points to the correct directory where the .sql migration files (e.g., .up.sql and .down.sql) are located.</p> </li> <li> <p>PostgreSQL Configuration</p> </li> <li> <p>APPLY: Set to true to apply migrations to the PostgreSQL database.</p> </li> <li>HOST: The hostname or IP address of the PostgreSQL server. Defaults to localhost if running on the same machine.</li> <li>PORT: The port number to connect to PostgreSQL. The default PostgreSQL port is 5432.</li> <li>USER: The username to use when connecting to the PostgreSQL database.</li> <li>PASSWORD: The password for the specified PostgreSQL user.</li> <li> <p>DBNAME: The name of the PostgreSQL database where migrations will be applied.</p> </li> <li> <p>MySQL Configuration</p> </li> <li> <p>APPLY: Set to true to apply migrations to the MySQL database. Set to false if PostgreSQL is being used instead.</p> </li> <li>HOST: The hostname or IP address of the MySQL server. Defaults to localhost.</li> <li>PORT: The port number to connect to MySQL. The default MySQL port is 3306.</li> <li>USER: The username to use when connecting to the MySQL database.</li> <li>PASSWORD: The password for the specified MySQL user.</li> <li>DBNAME: The name of the MySQL database where migrations will be applied.</li> <li>ROOT_PASSWORD: The root password for the MySQL server.</li> </ol> <p>Note: To run migrations on PostgreSQL, ensure that APPLY is set to true. If you are only using MySQL, set APPLY to false for PostgreSQL.</p> <p>To run migrations on PostgreSQL, ensure that:</p> <ul> <li>postgres.APPLY is set to true.</li> <li>mysql.APPLY is set to false.</li> </ul> <p>To run migrations on MySQL, ensure that:</p> <ul> <li>mysql.APPLY is set to true.</li> <li>postgres.APPLY is set to false.</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#help","title":"Help","text":"<pre><code>go run cmd/go-migrations/main.go -help\n</code></pre> <pre><code>Usage of go-migrations &lt;0.1.0&gt;\n  -check-config\n        Verify the yaml file\n  -help\n        Show available commands\n  -migrate-down\n        Make migrations down\n  -migrate-up\n        Make migrations up\n  -ping\n        Check the DB connection\n  -v string\n        Specify the version ID for the migration (Format: 0001)\n  -version\n        Print version of the go-migrations\n\n</code></pre>"},{"location":"usage/#check-config","title":"Check-config","text":"<pre><code>go run cmd/go-migrations/main.go -check-config\ngo-migrations - version: 0.1.0\nCheck configuration DB connect file\n\nPath for migrations is ok: true\n    /home/lucas/go/src/github.com/lucaslimafernandes/go-migrations/migrations\n\nPostgres:\n    APPLY: true\n    HOST: true\n    PORT: true\n    USER: true\n    PASSWORD: true\nMysql:\n    APPLY: false\n    HOST: true\n    PORT: true\n    USER: true\n    PASSWORD: true\n\nIs Valid: true\ngo-migrations accept only one DB at a time \n</code></pre>"},{"location":"usage/#migrate-up","title":"Migrate-up","text":"<pre><code>go run cmd/go-migrations/main.go -migrate-up -v 0001\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n--Applied at: 2024-10-06 14:44:37\n--Rows affected: 0\n--Last Id inserted: 0\nMigration applied sucessfully:  0001_create_users_table.up.sql\n</code></pre>"},{"location":"usage/#migrate-down","title":"Migrate-down","text":"<pre><code>go run cmd/go-migrations/main.go -migrate-down -v 0001              \nDROP TABLE if exists users;\n\n--Applied at: 2024-10-06 14:46:09\n--Rows affected: 0\n--Last Id inserted: 0\nMigration applied sucessfully:  0001_create_users_table.down.sql\n</code></pre>"},{"location":"usage/#ping","title":"Ping","text":"<pre><code>go run cmd/go-migrations/main.go -ping\ngo-migrations - version: 0.1.0\nPing\nEverything Ok!% \n</code></pre>"},{"location":"usage/#version","title":"Version","text":"<pre><code>go run cmd/go-migrations/main.go -version\ngo-migrations - version: 0.1.0\n</code></pre>"}]}